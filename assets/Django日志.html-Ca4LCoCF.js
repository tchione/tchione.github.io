import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as e,o as i}from"./app-CLMdb5Qr.js";const l={};function p(d,n){return i(),a("div",null,n[0]||(n[0]=[e(`<h1 id="django日志" tabindex="-1"><a class="header-anchor" href="#django日志"><span>Django日志</span></a></h1><hr><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>cur_path = os.path.dirname(os.path.realpath(__file__))  # log_path是存放日志的路径</span></span>
<span class="line"><span>log_path = os.path.join(os.path.dirname(cur_path), &#39;log&#39;)</span></span>
<span class="line"><span>if not os.path.exists(log_path): os.mkdir(log_path)  # 如果不存在这个logs文件夹，就自动创建一个</span></span>
<span class="line"><span>LOGGING = {</span></span>
<span class="line"><span>    &#39;version&#39;: 1,</span></span>
<span class="line"><span>    &#39;disable_existing_loggers&#39;: True,</span></span>
<span class="line"><span>    &#39;formatters&#39;: {</span></span>
<span class="line"><span>        # 日志格式</span></span>
<span class="line"><span>        &#39;standard&#39;: {</span></span>
<span class="line"><span>            &#39;format&#39;: &#39;[%(asctime)s] [%(filename)s:%(lineno)d] [%(module)s:%(funcName)s] &#39;</span></span>
<span class="line"><span>                      &#39;[%(levelname)s]- %(message)s&#39;},</span></span>
<span class="line"><span>        &#39;simple&#39;: {  # 简单格式</span></span>
<span class="line"><span>            &#39;format&#39;: &#39;%(levelname)s %(message)s&#39;</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    # 过滤</span></span>
<span class="line"><span>    &#39;filters&#39;: {</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    # 定义具体处理日志的方式</span></span>
<span class="line"><span>    &#39;handlers&#39;: {</span></span>
<span class="line"><span>        &#39;file&#39;: {</span></span>
<span class="line"><span>            &#39;level&#39;: &#39;INFO&#39;,</span></span>
<span class="line"><span>            # &#39;class&#39;: &#39;logging.FileHandler&#39;,</span></span>
<span class="line"><span>            &#39;filename&#39;: os.path.dirname(os.path.dirname(os.path.realpath(__file__))) + &#39;/log/log.txt&#39;,</span></span>
<span class="line"><span>            &#39;class&#39;: &#39;logging.handlers.RotatingFileHandler&#39;,</span></span>
<span class="line"><span>            &#39;maxBytes&#39;: 1024 * 1024 * 300,</span></span>
<span class="line"><span>            &#39;backupCount&#39;: 2,</span></span>
<span class="line"><span>            &#39;formatter&#39;: &#39;standard&#39;,</span></span>
<span class="line"><span>            &#39;encoding&#39;: &#39;utf-8&#39;,  # 设置默认编码</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    # 配置用哪几种 handlers 来处理日志</span></span>
<span class="line"><span>    &#39;loggers&#39;: {</span></span>
<span class="line"><span>        # 类型 为 django 处理所有类型的日志， 默认调用</span></span>
<span class="line"><span>        &#39;log_info&#39;: {</span></span>
<span class="line"><span>            &#39;handlers&#39;: [&#39;file&#39;],</span></span>
<span class="line"><span>            &#39;level&#39;: &#39;INFO&#39;,</span></span>
<span class="line"><span>            &#39;propagate&#39;: True</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>import logging</span></span>
<span class="line"><span>logger = logging.getLogger(&#39;log_info&#39;)</span></span>
<span class="line"><span># logger.info(&#39;uuid:{}---&gt;adid:{}--&gt;行数:{}---&gt;错误:{}&#39;.format(uuid_id, device_id,72,e))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)]))}const t=s(l,[["render",p]]),o=JSON.parse(`{"path":"/article/code/Django%E6%97%A5%E5%BF%97.html","title":"Django日志","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2025-03-20T00:00:00.000Z","category":["技术"],"tag":["Python","后端","Django"],"description":"Django日志","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/article/code/Django%E6%97%A5%E5%BF%97.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"Django日志"}],["meta",{"property":"og:description","content":"Django日志"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-20T05:57:35.000Z"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:tag","content":"后端"}],["meta",{"property":"article:tag","content":"Django"}],["meta",{"property":"article:published_time","content":"2025-03-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-20T05:57:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Django日志\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-20T05:57:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Chione\\",\\"url\\":\\"https://chione.github.io\\"}]}"]]},"git":{"createdTime":1742450255000,"updatedTime":1742450255000,"contributors":[{"name":"wen.tian","username":"wen.tian","email":"tw958658@163.com","commits":1,"url":"https://github.com/wen.tian"}]},"readingTime":{"minutes":0.65,"words":196},"filePathRelative":"article/code/Django日志.md","localizedDate":"2025年3月20日","excerpt":"\\n<hr>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span>cur_path = os.path.dirname(os.path.realpath(__file__))  # log_path是存放日志的路径</span></span>\\n<span class=\\"line\\"><span>log_path = os.path.join(os.path.dirname(cur_path), 'log')</span></span>\\n<span class=\\"line\\"><span>if not os.path.exists(log_path): os.mkdir(log_path)  # 如果不存在这个logs文件夹，就自动创建一个</span></span>\\n<span class=\\"line\\"><span>LOGGING = {</span></span>\\n<span class=\\"line\\"><span>    'version': 1,</span></span>\\n<span class=\\"line\\"><span>    'disable_existing_loggers': True,</span></span>\\n<span class=\\"line\\"><span>    'formatters': {</span></span>\\n<span class=\\"line\\"><span>        # 日志格式</span></span>\\n<span class=\\"line\\"><span>        'standard': {</span></span>\\n<span class=\\"line\\"><span>            'format': '[%(asctime)s] [%(filename)s:%(lineno)d] [%(module)s:%(funcName)s] '</span></span>\\n<span class=\\"line\\"><span>                      '[%(levelname)s]- %(message)s'},</span></span>\\n<span class=\\"line\\"><span>        'simple': {  # 简单格式</span></span>\\n<span class=\\"line\\"><span>            'format': '%(levelname)s %(message)s'</span></span>\\n<span class=\\"line\\"><span>        },</span></span>\\n<span class=\\"line\\"><span>    },</span></span>\\n<span class=\\"line\\"><span>    # 过滤</span></span>\\n<span class=\\"line\\"><span>    'filters': {</span></span>\\n<span class=\\"line\\"><span>    },</span></span>\\n<span class=\\"line\\"><span>    # 定义具体处理日志的方式</span></span>\\n<span class=\\"line\\"><span>    'handlers': {</span></span>\\n<span class=\\"line\\"><span>        'file': {</span></span>\\n<span class=\\"line\\"><span>            'level': 'INFO',</span></span>\\n<span class=\\"line\\"><span>            # 'class': 'logging.FileHandler',</span></span>\\n<span class=\\"line\\"><span>            'filename': os.path.dirname(os.path.dirname(os.path.realpath(__file__))) + '/log/log.txt',</span></span>\\n<span class=\\"line\\"><span>            'class': 'logging.handlers.RotatingFileHandler',</span></span>\\n<span class=\\"line\\"><span>            'maxBytes': 1024 * 1024 * 300,</span></span>\\n<span class=\\"line\\"><span>            'backupCount': 2,</span></span>\\n<span class=\\"line\\"><span>            'formatter': 'standard',</span></span>\\n<span class=\\"line\\"><span>            'encoding': 'utf-8',  # 设置默认编码</span></span>\\n<span class=\\"line\\"><span>        },</span></span>\\n<span class=\\"line\\"><span>    },</span></span>\\n<span class=\\"line\\"><span>    # 配置用哪几种 handlers 来处理日志</span></span>\\n<span class=\\"line\\"><span>    'loggers': {</span></span>\\n<span class=\\"line\\"><span>        # 类型 为 django 处理所有类型的日志， 默认调用</span></span>\\n<span class=\\"line\\"><span>        'log_info': {</span></span>\\n<span class=\\"line\\"><span>            'handlers': ['file'],</span></span>\\n<span class=\\"line\\"><span>            'level': 'INFO',</span></span>\\n<span class=\\"line\\"><span>            'propagate': True</span></span>\\n<span class=\\"line\\"><span>        },</span></span>\\n<span class=\\"line\\"><span>    }</span></span>\\n<span class=\\"line\\"><span>}</span></span>\\n<span class=\\"line\\"><span>import logging</span></span>\\n<span class=\\"line\\"><span>logger = logging.getLogger('log_info')</span></span>\\n<span class=\\"line\\"><span># logger.info('uuid:{}---&gt;adid:{}--&gt;行数:{}---&gt;错误:{}'.format(uuid_id, device_id,72,e))</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{t as comp,o as data};
